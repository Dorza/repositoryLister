{"version":3,"sources":["lib/dateTime.js","components/1.atoms/Button/Button.jsx","components/1.atoms/Inputs/Text/Text.jsx","components/1.atoms/Spinner/Spinner.jsx","components/2.compounds/Search/Search.jsx","components/2.compounds/Pagination/Pagination.jsx","components/3.organisms/RepoPanel/RepoPanel.jsx","components/3.organisms/OrgPanel/OrgPanel.jsx","components/3.organisms/NavBar/NavBar.jsx","lib/ajax.js","lib/doze.js","components/4.ecosystems/Repositories/Repositories.jsx","components/4.ecosystems/Organisations/Organisations.jsx","index.js","App.js"],"names":["dateFormat","date","format","Date","Button","props","text","size","styledAs","onClick","className","btnClass","classNames","type","defaultProps","InputText","onChange","Spinner","Search","btnText","defaultValue","value","Pagination","handlePrev","handleNext","class","RepoPanel","userRepos","map","userRepo","key","id","name","title","description","stars","created","updated","defaultBranch","href","url","target","rel","OrgPanel","orgRepos","block","orgRepo","src","avatar","alt","width","NavBar","to","ajax","get","Error","axios","create","baseURL","request","method","doze","ms","Promise","r","setTimeout","Repositories","useState","username","setUsername","setUserRepos","loading","setLoading","page","setPage","toastMessage","addToast","useToasts","getApiData","showPage","a","then","response","repos","data","repo","created_at","updated_at","default_branch","stargazers_count","svn_url","catch","err","status","console","error","appearance","autoDismiss","handleOnClick","e","prevPage","nextPage","Organisations","setOrgRepos","login","avatar_url","length","rootElement","document","getElementById","ReactDOM","render","placement","path","exact","component"],"mappings":"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","file":"static/js/main.f5bb18b8.chunk.js","sourcesContent":["import  { format } from \"date-fns\";\n\nconst dateFormat = (date) => {\n\n    return format(new Date(date), \"do MMM y\");\n}\n\nexport { dateFormat };","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nconst Button = props => {\n  const { text, size, styledAs, onClick, className } = props;\n\n  const btnClass = classNames({\n    \"c-btn\": true,\n    \"c-btn--primary\": styledAs === \"primary\" ? true : false,\n    \"c-btn--secondary\": styledAs === \"secondary\" ? true : false,\n    \"c-btn--tertiary\": styledAs === \"tertiary\" ? true : false,\n    \"c-btn--small\": size === \"small\" ? true : false\n  });\n\n  return (\n    <button type=\"button\" className={`${btnClass} ${className}`} onClick={onClick}>\n      {text}\n    </button>\n  );\n};\n\nButton.defaultProps = {\n  styledAs: \"primary\",\n  size: \"normal\",\n  className: \"\",\n};\n\nButton.propTypes = {\n  text: PropTypes.string,\n  styledAs: PropTypes.string,\n  size: PropTypes.string,\n  className: PropTypes.string\n\n};\n\nexport default Button;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst InputText = props => {\n  const { type, onChange } = props;\n\n  return <input type={type} onChange={onChange} {...props} />;\n};\n\nInputText.propTypes = {\n  type: PropTypes.string,\n  onChange: PropTypes.func.isRequired\n};\n\nexport default InputText;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n\nconst Spinner = props => {\n  const { text } = props;\n\n  return <p className=\"c-spinner\">{text}</p>\n};\n\nSpinner.defaultProps = {\n    text: \"Loading...\",\n}\n\nSpinner.propTypes = {\n    text: PropTypes.string\n};\n\nexport default Spinner;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Button, InputText } from \"../../1.atoms\";\n\nconst Search = props => {\n  const { btnText, defaultValue, onClick, onChange, classNames} = props;\n\n  return (\n    <form className={`c-search ${classNames}`}>\n      <InputText className=\"c-search__input\" type=\"text\" onChange={onChange} value={defaultValue} />\n      <Button type=\"submit\" text={btnText} onClick={onClick} />\n    </form>\n  );\n};\n\nSearch.defaultProps = {\n  classNames: \"\"\n}\n\nSearch.propTypes = {\n  btnText: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  defaultValue: PropTypes.string.isRequired,\n  classNames: PropTypes.string\n};\n\nexport default Search;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"../../1.atoms\";\n\nconst Pagination = props => {\n\n    const { handlePrev, handleNext } = props;\n\n    return (\n      <div class=\"c-pagination\">\n         <Button size=\"small\" className=\"c-pagination__btn c-pagination__btn--prev\" onClick={handlePrev} text=\"Previous\" />\n         <Button size=\"small\" className=\"c-pagination__btn c-pagination__btn--next\" onClick={handleNext} text=\"Next\"/>\n      </div>\n    )\n}\n\nPagination.propTypes = {\n    handlePrev: PropTypes.func.isRequired,\n    handleNext: PropTypes.func.isRequired,\n\n};\n\nexport default Pagination;","import React,{Fragment} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { dateFormat } from \"../../../lib/dateTime\";\nimport { Pagination } from \"../../2.compounds\";\n\nconst RepoPanel = props => {\n  const { userRepos, handlePrev, handleNext} = props;\n\n  return (\n    <Fragment>\n\n      <h3 className=\"u-title-spacing\">Found repositories</h3>\n      \n      <Pagination handlePrev={handlePrev} handleNext={handleNext} />\n\n      <div className=\"c-panel-wrapper\">\n        {\n          userRepos.map(userRepo => (\n            <div className=\"c-panel\" key={userRepo.id}>\n              <h2 className=\"c-panel__header\">{userRepo.name}</h2>\n              <ul className=\"c-panel__items\">\n                <li className=\"c-panel__item c-panel__item--description\" title=\"Description\">{userRepo.description === null ? \"No description found\" : userRepo.description}</li>\n                <li className=\"c-panel__item c-panel__item--stars\" title=\"Stars\">{userRepo.stars}</li>\n                <li className=\"c-panel__item c-panel__item--created\" title=\"Created\">{dateFormat(userRepo.created)}</li>\n                <li className=\"c-panel__item c-panel__item--updated\" title=\"Last updated\">{dateFormat(userRepo.updated)}</li>\n                <li className=\"c-panel__item c-panel__item--branch\" title=\"Default branch\">{userRepo.defaultBranch}</li>\n                <li className=\"c-panel__item c-panel__item--view\" title=\"View repo on GitHub\">\n                  <a className=\"c-btn c-btn--secondary c-btn--small\" href={userRepo.url} target=\"_blank\" rel=\"noopener noreferrer\">View repo</a>\n                </li>\n              </ul>\n            </div>\n          ))\n        }\n      </div>\n    </Fragment>\n  )\n};\n\nRepoPanel.propTypes = {\n  userRepos: PropTypes.arrayOf(\n    PropTypes.shape({})\n  ).isRequired,\n  handlePrev: PropTypes.func.isRequired,\n  handleNext: PropTypes.func.isRequired,\n};\n\nexport default RepoPanel;\n","import React,{Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst OrgPanel = props => {\n  const { orgRepos } = props;\n\n  const block = \"c-panel\";\n  return (\n    <Fragment>\n\n      <h3 className=\"u-title-spacing\">Found Organisations</h3>\n      <div className={`${block}-wrapper`}>\n        {\n          orgRepos.map(orgRepo => (\n            <div className={`${block}`} key={orgRepo.id}>\n              <h2 className={`${block}__header`}>\n                <img className={`${block}__avatar`} src={orgRepo.avatar} alt={`${orgRepo.name} repository avatar`} width=\"20px\" />\n                {orgRepo.name}\n              </h2>\n              <ul className={`${block}__items`}>\n                <li className={`${block}__item ${block}__item--view`}>\n                  <a className=\"c-btn c-btn--secondary c-btn--small\" href={orgRepo.url} target=\"_blank\" rel=\"noopener noreferrer\">View repo</a></li>\n              </ul>\n            </div>\n          ))\n        }\n      </div>\n    </Fragment>\n  )\n};\n\nOrgPanel.propTypes = {\n  orgRepos: PropTypes.arrayOf(\n    PropTypes.shape({})\n  ).isRequired\n};\n\nexport default OrgPanel;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst NavBar = () => {\n\n  return (\n    <header className=\"c-nav-bar\">\n        <nav>\n            <Link className=\"c-nav-bar__link\" to=\"/repositories\">Repositories</Link>\n            <Link className=\"c-nav-bar__link\" to=\"/organisations\">Organisations</Link>\n        </nav>\n    </header>\n  )\n};\n\n\nexport default NavBar;\n\n","import axios from 'axios';\n\nconst api = () => axios.create({\n  baseURL: \"https://api.github.com\"\n});\n\nconst ajax =  {\n    get: (url) => {\n        if (!url) {\n            throw new Error(\"an api url is required\");\n        }\n      \n        return api().request({\n            method: \"get\",\n            url,\n        });\n    }\n}\n\nexport default ajax ;\n","const doze = ms => new Promise(r => setTimeout(() => r(), ms));\n\nexport { doze };","import React, { Fragment, useState } from \"react\";\nimport { Spinner} from \"../../1.atoms\";\nimport { Search } from \"../../2.compounds\";\nimport { RepoPanel } from \"../../3.organisms\";\nimport ajax from \"../../../lib/ajax\";\nimport { doze } from \"../../../lib/doze\"\nimport { useToasts } from \"react-toast-notifications\"\n\nconst Repositories = () => {\n\n  const [username, setUsername] = useState(\"Wesbos\");\n  const [userRepos, setUserRepos] = useState();\n  const [loading, setLoading] =  useState(false);\n  const [page, setPage] = useState(1);\n  let toastMessage = \"\";\n  const { addToast } = useToasts()\n\nconst getApiData = async (showPage) => {\n\n  const url = `/users/${username}/repos?page=1&per_page=10&page=${showPage}`;\n\n  await ajax.get(url).then(response => {\n    const repos = response.data.map(repo => ({\n      id: repo.id,\n      name: repo.name,\n      created: repo.created_at,\n      updated: repo.updated_at,\n      defaultBranch: repo.default_branch,\n      description: repo.description,\n      stars: repo.stargazers_count,\n      url: repo.svn_url\n\n    }))\n\n    setUserRepos(repos);\n    \n  \n  }).catch(err => {\n  \n    setLoading(false);\n\n    const { response: { status }} = err;\n\n    if(status === 404) {\n      toastMessage = \"Sorry no repositories for that user could be found, please try another username\";\n      console.error(err.response);\n    }\n    else {\n      toastMessage = \"An error occurred while retrieving data, please try again\";\n    }\n\n    addToast(toastMessage, { appearance: 'error', autoDismiss: false })\n  }); \n}\n  const handleOnClick = async () => {\n\n    await doze(0);    \n    setLoading(true);\n    getApiData(page);\n    setLoading(false);\n\n  };\n\n  const handleOnChange = e => setUsername(e.target.value);\n\n  const handlePrev = () => {\n    const prevPage = page - 1 === 0 ? 1 : page - 1;\n    setPage(prevPage);\n    getApiData(prevPage);\n  }\n\n  const handleNext = () => {\n    const nextPage = page + 1\n    setPage(nextPage);\n    getApiData(nextPage);\n  }\n\n  return (\n\n        <Fragment>\n    \n          <h1 className=\"u-title-spacing\">User repositories</h1>\n    \n          <Search\n            btnText=\"Get Repos\"\n            defaultValue={username}\n            onClick={handleOnClick}\n            onChange={handleOnChange}\n          />\n    \n        {loading && <Spinner />}\n        {userRepos && <RepoPanel userRepos={userRepos} handlePrev={handlePrev} handleNext={handleNext} />}\n    \n        </Fragment>\n  );\n}\n\nexport default Repositories;\n","import React, { Fragment, useState } from \"react\";\nimport { Spinner} from \"../../1.atoms\";\nimport { Search } from \"../../2.compounds\";\nimport { OrgPanel } from \"../../3.organisms\";\nimport ajax from \"../../../lib/ajax\";\nimport { doze } from \"../../../lib/doze\"\nimport { useToasts } from \"react-toast-notifications\"\n\nconst Organisations = () => {\n\n  const [username, setUsername] = useState(\"Wesbos\");\n  const [orgRepos, setOrgRepos] = useState();\n  const [loading, setLoading] =  useState(false);\n  let toastMessage = \"\";\n  const { addToast } = useToasts()\n\n\n  const handleOnClick = async () => {\n    \n    const url = `/users/${username}/orgs`;\n\n    setLoading(true);\n    await doze(0);;\n    await ajax.get(url).then(response => {\n      const repos = response.data.map(repo => ({\n        id: repo.id,\n        name: repo.login,\n        avatar: repo.avatar_url,\n        url: repo.url\n\n      }))\n\n      if(repos.length > 0) {\n\n        setOrgRepos(repos);\n\n      } else {\n        \n        toastMessage = \"Found 0 organisations this user is associated with\";\n\n        addToast(toastMessage, { appearance: 'info', autoDismiss: false })\n      }\n\n      setLoading(false);\n\n    }).catch(err => {\n      setLoading(false);\n\n      const { response: { status }} = err;\n\n      if(status === 404) {\n        toastMessage = \"Sorry no organisations for that user could be found, please try another username\";\n        console.error(err.response);\n      }\n      else {\n        toastMessage = \"An error occurred while retrieving data, please try again\";\n      }\n      addToast(toastMessage, { appearance: 'error', autoDismiss: false })\n    });    \n  };\n\n  const handleOnChange = e => setUsername(e.target.value);\n\n  return (\n        <Fragment>\n          <h1 className=\"u-title-spacing\">User organisations</h1>\n          <Search\n            btnText=\"Get Repos\"\n            defaultValue={username}\n            onClick={handleOnClick}\n            onChange={handleOnChange}\n          />\n        {loading && <Spinner />}\n        {orgRepos && <OrgPanel orgRepos={orgRepos} />}\n        </Fragment>\n  );\n}\n\nexport default Organisations;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n","import React from \"react\";\nimport \"./sass/styles.scss\";\nimport { NavBar } from \"./components/3.organisms\";\nimport { Repositories, Organisations } from \"./components/4.ecosystems\";\nimport { ToastProvider } from 'react-toast-notifications'\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\n\nexport default function App() {\n\n  return (\n      <ToastProvider placement=\"bottom-right\">\n        <Router>\n          <NavBar />\n          <div className=\"c-container\">\n            <main>\n                <Switch>\n                  <Route path=\"/repositoryLister/\" exact component={Repositories} />    \n                  <Route path=\"/repositoryLister/repositories\" component={Repositories} />        \n                  <Route path=\"/repositoryLister/organisations\" component={Organisations} />\n                </Switch>\n            </main>\n          </div>\n        </Router>\n      </ToastProvider>\n  );\n}\n"],"sourceRoot":""}